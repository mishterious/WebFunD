{"version":3,"sources":["webpack:///18.808086bf6e17b91f5ec0.js","webpack:///./components/signup/signup_controller.jsx"],"names":["webpackJsonp","2505","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_propTypes","_propTypes2","_react","_react2","_reactIntl","_reactRouterDom","_client","_browser_history","_global_actions","GlobalActions","newObj","key","prototype","hasOwnProperty","call","_team_actions","_user_actions","_browser_store","_browser_store2","_user_store","_user_store2","_logo","_logo2","_announcement_bar","_announcement_bar2","_back_button","_back_button2","_form_error","_form_error2","_loading_screen","_loading_screen2","_constants","SignupController","_React$Component","props","this","_this","__proto__","_initialiseProps","renderSignupControls","bind","loading","serverError","noOpenServerError","usedBefore","location","search","params","URLSearchParams","hash","get","inviteId","getCurrentUser","getGlobalItem","window","mm_config","EnableOpenServer","getNoAccounts","createElement","FormattedMessage","id","defaultMessage","state","_this2","removeGlobalItem","data","userLoggedIn","addUserToTeamFromInvite","team","loadMe","then","browserHistory","push","name","Constants","DEFAULT_CHANNEL","handleInvalidInvite","getInviteInfo","inviteData","setState","redirectUserToDefaultTeam","signupControls","EnableSignUpWithEmail","Link","className","to","EnableSignUpWithGitLab","href","Client4","getOAuthRoute","mm_license","IsLicensed","EnableSignUpWithGoogle","EnableSignUpWithOffice365","EnableLdap","EnableSaml","query","SamlLoginButtonText","length","signupDisabledError","error","margin","src","SiteName","Component","_this3","err","server_error_id","message","propTypes","object"],"mappings":"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","file":"18.808086bf6e17b91f5ec0.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 2505:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(239);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(238);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(242);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(240);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(241);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(21);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(697);\n\nvar _reactRouterDom = __webpack_require__(244);\n\nvar _client = __webpack_require__(245);\n\nvar _browser_history = __webpack_require__(248);\n\nvar _global_actions = __webpack_require__(715);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(761);\n\nvar _user_actions = __webpack_require__(717);\n\nvar _browser_store = __webpack_require__(767);\n\nvar _browser_store2 = _interopRequireDefault(_browser_store);\n\nvar _user_store = __webpack_require__(707);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _logo = __webpack_require__(791);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _announcement_bar = __webpack_require__(819);\n\nvar _announcement_bar2 = _interopRequireDefault(_announcement_bar);\n\nvar _back_button = __webpack_require__(792);\n\nvar _back_button2 = _interopRequireDefault(_back_button);\n\nvar _form_error = __webpack_require__(762);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nvar _loading_screen = __webpack_require__(732);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _constants = __webpack_require__(43);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupController = function (_React$Component) {\n    (0, _inherits3.default)(SignupController, _React$Component);\n\n    function SignupController(props) {\n        (0, _classCallCheck3.default)(this, SignupController);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupController.__proto__ || (0, _getPrototypeOf2.default)(SignupController)).call(this, props));\n\n        _initialiseProps.call(_this);\n\n        _this.renderSignupControls = _this.renderSignupControls.bind(_this);\n\n        var loading = false;\n        var serverError = '';\n        var noOpenServerError = false;\n        var usedBefore = false;\n\n        if (_this.props.location.search) {\n            var params = new URLSearchParams(_this.props.location.search);\n            var hash = params.get('h');\n            if (hash == null) {\n                hash = '';\n            }\n            var inviteId = params.get('id');\n            if (inviteId == null) {\n                inviteId = '';\n            }\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !_user_store2.default.getCurrentUser()) {\n                usedBefore = _browser_store2.default.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !_user_store2.default.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.no_open_server',\n                    defaultMessage: 'This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                });\n            }\n        }\n\n        _this.state = {\n            loading: loading,\n            serverError: serverError,\n            noOpenServerError: noOpenServerError,\n            usedBefore: usedBefore\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupController, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            _browser_store2.default.removeGlobalItem('team');\n            if (this.props.location.search) {\n                var params = new URLSearchParams(this.props.location.search);\n                var hash = params.get('h') || '';\n                var data = params.get('d') || '';\n                var inviteId = params.get('id') || '';\n\n                var userLoggedIn = _user_store2.default.getCurrentUser() != null;\n\n                if ((inviteId || hash) && userLoggedIn) {\n                    (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function (team) {\n                        (0, _user_actions.loadMe)().then(function () {\n                            _browser_history.browserHistory.push('/' + team.name + ('/channels/' + _constants.Constants.DEFAULT_CHANNEL));\n                        });\n                    }, this.handleInvalidInvite);\n\n                    return;\n                }\n\n                if (inviteId) {\n                    (0, _team_actions.getInviteInfo)(inviteId, function (inviteData) {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        _this2.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    }, this.handleInvalidInvite);\n\n                    return;\n                }\n\n                if (userLoggedIn) {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        }\n    }, {\n        key: 'renderSignupControls',\n        value: function renderSignupControls() {\n            var signupControls = [];\n\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _reactRouterDom.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full email',\n                        key: 'email',\n                        to: '/signup_email' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-envelope' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.email',\n                            defaultMessage: 'Email and Password'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full gitlab',\n                        key: 'gitlab',\n                        href: _client.Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.gitlab',\n                                defaultMessage: 'GitLab Single Sign-On'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full google',\n                        key: 'google',\n                        href: _client.Client4.getOAuthRoute() + '/google/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.google',\n                                defaultMessage: 'Google Account'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full office365',\n                        key: 'office365',\n                        href: _client.Client4.getOAuthRoute() + '/office365/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.office365',\n                                defaultMessage: 'Office 365'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _reactRouterDom.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full ldap',\n                        key: 'ldap',\n                        to: '/signup_ldap' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-folder-open fa--margin-top' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.ldap',\n                                defaultMessage: 'AD/LDAP Credentials'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n                var query = '';\n                if (window.location.search) {\n                    query = '&action=signup';\n                } else {\n                    query = '?action=signup';\n                }\n\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full saml',\n                        key: 'saml',\n                        href: '/login/sso/saml' + window.location.search + query\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-lock fa--margin-top' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            global.window.mm_config.SamlLoginButtonText\n                        )\n                    )\n                ));\n            }\n\n            if (signupControls.length === 0) {\n                var signupDisabledError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.none',\n                    defaultMessage: 'No user creation method has been enabled. Please contact an administrator for access.'\n                });\n                signupControls = _react2.default.createElement(_form_error2.default, {\n                    error: signupDisabledError,\n                    margin: true\n                });\n            } else if (signupControls.length === 1) {\n                if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                    return _browser_history.browserHistory.push('/signup_email' + window.location.search);\n                } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                    return _browser_history.browserHistory.push('/signup_ldap' + window.location.search);\n                }\n            }\n\n            return signupControls;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            if (this.state.loading) {\n                return _react2.default.createElement(_loading_screen2.default, null);\n            }\n\n            if (this.state.usedBefore) {\n                return _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'signup_user_completed.expired',\n                        defaultMessage: 'You\\'ve already completed the signup process for this invitation or this invitation has expired.'\n                    })\n                );\n            }\n\n            var serverError = null;\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.serverError\n                    )\n                );\n            }\n\n            var signupControls = void 0;\n            if (this.state.noOpenServerError || this.state.usedBefore) {\n                signupControls = null;\n            } else {\n                signupControls = this.renderSignupControls();\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_announcement_bar2.default, null),\n                _react2.default.createElement(_back_button2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__content' },\n                            _react2.default.createElement(\n                                'h1',\n                                null,\n                                global.window.mm_config.SiteName\n                            ),\n                            _react2.default.createElement(\n                                'h4',\n                                { className: 'color--light' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'web.root.signup_info'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'margin--extra' },\n                                _react2.default.createElement(\n                                    'h5',\n                                    null,\n                                    _react2.default.createElement(\n                                        'strong',\n                                        null,\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'signup.title',\n                                            defaultMessage: 'Create an account with:'\n                                        })\n                                    )\n                                )\n                            ),\n                            signupControls,\n                            serverError\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _reactRouterDom.Link,\n                                {\n                                    to: '/login' + this.props.location.search\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupController;\n}(_react2.default.Component); // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar _initialiseProps = function _initialiseProps() {\n    var _this3 = this;\n\n    this.handleInvalidInvite = function (err) {\n        var serverError = void 0;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'signup_user_completed.invalid_invite',\n                defaultMessage: 'The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n            });\n        }\n\n        _this3.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError: serverError\n        });\n    };\n};\n\nexports.default = SignupController;\n\n\nSignupController.propTypes = {\n    location: _propTypes2.default.object\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 18.808086bf6e17b91f5ec0.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {browserHistory} from 'utils/browser_history';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite, getInviteInfo} from 'actions/team_actions.jsx';\nimport {loadMe} from 'actions/user_actions.jsx';\nimport BrowserStore from 'stores/browser_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport logoImage from 'images/logo.png';\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport FormError from 'components/form_error.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\nimport {Constants} from 'utils/constants.jsx';\n\nexport default class SignupController extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderSignupControls = this.renderSignupControls.bind(this);\n\n        let loading = false;\n        let serverError = '';\n        let noOpenServerError = false;\n        let usedBefore = false;\n\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            let hash = params.get('h');\n            if (hash == null) {\n                hash = '';\n            }\n            let inviteId = params.get('id');\n            if (inviteId == null) {\n                inviteId = '';\n            }\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !UserStore.getCurrentUser()) {\n                usedBefore = BrowserStore.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !UserStore.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = (\n                    <FormattedMessage\n                        id='signup_user_completed.no_open_server'\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                    />\n                );\n            }\n        }\n\n        this.state = {\n            loading,\n            serverError,\n            noOpenServerError,\n            usedBefore\n        };\n    }\n\n    componentDidMount() {\n        BrowserStore.removeGlobalItem('team');\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            const hash = params.get('h') || '';\n            const data = params.get('d') || '';\n            const inviteId = params.get('id') || '';\n\n            const userLoggedIn = UserStore.getCurrentUser() != null;\n\n            if ((inviteId || hash) && userLoggedIn) {\n                addUserToTeamFromInvite(\n                    data,\n                    hash,\n                    inviteId,\n                    (team) => {\n                        loadMe().then(\n                            () => {\n                                browserHistory.push('/' + team.name + `/channels/${Constants.DEFAULT_CHANNEL}`);\n                            }\n                        );\n                    },\n                    this.handleInvalidInvite\n                );\n\n                return;\n            }\n\n            if (inviteId) {\n                getInviteInfo(\n                    inviteId,\n                    (inviteData) => {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        this.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    },\n                    this.handleInvalidInvite\n                );\n\n                return;\n            }\n\n            if (userLoggedIn) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n    }\n\n    handleInvalidInvite = (err) => {\n        let serverError;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                />\n            );\n        }\n\n        this.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError\n        });\n    }\n\n    renderSignupControls() {\n        let signupControls = [];\n\n        if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full email'\n                    key='email'\n                    to={'/signup_email' + window.location.search}\n                >\n                    <span>\n                        <span className='icon fa fa-envelope'/>\n                        <FormattedMessage\n                            id='signup.email'\n                            defaultMessage='Email and Password'\n                        />\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full gitlab'\n                    key='gitlab'\n                    href={Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.gitlab'\n                                defaultMessage='GitLab Single Sign-On'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full google'\n                    key='google'\n                    href={Client4.getOAuthRoute() + '/google/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.google'\n                                defaultMessage='Google Account'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full office365'\n                    key='office365'\n                    href={Client4.getOAuthRoute() + '/office365/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.office365'\n                                defaultMessage='Office 365'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full ldap'\n                    key='ldap'\n                    to={'/signup_ldap' + window.location.search}\n                >\n                    <span>\n                        <span className='icon fa fa-folder-open fa--margin-top'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.ldap'\n                                defaultMessage='AD/LDAP Credentials'\n                            />\n                        </span>\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n            let query = '';\n            if (window.location.search) {\n                query = '&action=signup';\n            } else {\n                query = '?action=signup';\n            }\n\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full saml'\n                    key='saml'\n                    href={'/login/sso/saml' + window.location.search + query}\n                >\n                    <span>\n                        <span className='icon fa fa-lock fa--margin-top'/>\n                        <span>\n                            {global.window.mm_config.SamlLoginButtonText}\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (signupControls.length === 0) {\n            const signupDisabledError = (\n                <FormattedMessage\n                    id='signup_user_completed.none'\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\n                />\n            );\n            signupControls = (\n                <FormError\n                    error={signupDisabledError}\n                    margin={true}\n                />\n            );\n        } else if (signupControls.length === 1) {\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                return browserHistory.push('/signup_email' + window.location.search);\n            } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                return browserHistory.push('/signup_ldap' + window.location.search);\n            }\n        }\n\n        return signupControls;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        if (this.state.usedBefore) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='signup_user_completed.expired'\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\n                    />\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let signupControls;\n        if (this.state.noOpenServerError || this.state.usedBefore) {\n            signupControls = null;\n        } else {\n            signupControls = this.renderSignupControls();\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{global.window.mm_config.SiteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                />\n                            </h4>\n                            <div className='margin--extra'>\n                                <h5><strong>\n                                    <FormattedMessage\n                                        id='signup.title'\n                                        defaultMessage='Create an account with:'\n                                    />\n                                </strong></h5>\n                            </div>\n                            {signupControls}\n                            {serverError}\n                        </div>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login' + this.props.location.search}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSignupController.propTypes = {\n    location: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/signup_controller.jsx"],"sourceRoot":""}